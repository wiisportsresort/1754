{"version":3,"sources":["webpack:///./src/1754/dashboard/index.tsx","webpack:///./src/1754/common/hexdata.ts","webpack:///./src/1754/common/components/button.tsx","webpack:///./src/1754/common/components/header.tsx"],"names":["props","buttonRef","React","createRef","setInterval","colorArray","color","Colors","push","randomColor","Math","floor","random","length","current","modify","disabled","render","Button","stateful","ref","this","Component","window","addEventListener","$","on","location","href","ReactDOM","Header","Title","Spacer","className","id","Dashboard","document","querySelector","body","style","visibility","hexLocations","colors","france","britain","mohawk","cherokee","shawnee","miami","ojibwe","SemanticColors","defaultOwnersToHexes","state","newState","Error","setState","children","htmlType","type","buttonColor","colorWithOpacity","otherProps","undefined","css","background","border","icon","Icon","IconButton","Text","HeaderText","HeaderTitle","flexGrow"],"mappings":"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","file":"dashboard.09e9d1601e1bb167acb0.js","sourcesContent":["import * as $ from 'jquery';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { HTTPMethod } from '../../../server/types';\nimport { Button } from '../common/components/button';\nimport { Header, Spacer } from '../common/components/header';\nimport { HTMLDivProps } from '../common/props';\nimport { Colors } from '../common/hexdata';\n\nclass Dashboard extends Component<HTMLDivProps> {\n  buttonRef: React.RefObject<Button>;\n  constructor(props: Readonly<HTMLDivProps>) {\n    super(props);\n\n    this.buttonRef = React.createRef<Button>();\n\n    setInterval(() => {\n      const colorArray: string[] = [];\n\n      for (const color in Colors) {\n        colorArray.push(color);\n      }\n\n      const randomColor = Colors[colorArray[Math.floor(Math.random() * colorArray.length)]];\n\n      this.buttonRef.current?.modify({\n        color: randomColor,\n        disabled: Math.random() > 0.5,\n      });\n    }, 1000);\n  }\n\n  render() {\n    return (\n      <>\n        <Button stateful ref={this.buttonRef}>Button!</Button>\n      </>\n    );\n  }\n}\n\nfunction renderDashboard() {\n  $('.header-button-back').on('click', () => (location.href = '../'));\n\n  ReactDOM.render(\n    <>\n      <Header>\n        <Header.Title>1754</Header.Title>\n        <Spacer />\n        <Button className=\"header-button-back\">Back</Button>\n      </Header>\n\n      <div id=\"dashboard\">\n        <div id=\"dashboard-header\">\n          <h2 className=\"dashboard-title\">Dashboard</h2>\n          <div id=\"spacer\"></div>\n        </div>\n        <div className=\"dashboard-section\" id=\"dashboard-accounts\">\n          <h3 className=\"dashboard-subtitle\">Accounts</h3>\n          <Dashboard id=\"dashboard-controls-accounts\" />\n        </div>\n        <div className=\"dashboard-section\" id=\"dashboard-games\">\n          <h3 className=\"dashboard-subtitle\">Games</h3>\n          <div id=\"dashboard-controls-games\"></div>\n        </div>\n      </div>\n    </>,\n    document.querySelector('#app')\n  );\n\n  (function attatchFormListeners() {\n    function someHandler() {\n      const data = {};\n\n      $jsonRequest('somePath', 'POST', data)\n        .done(res => {})\n        .fail(res => {});\n    }\n  })();\n}\n\nconst $jsonRequest = (\n  url: string,\n  method: HTTPMethod,\n  data: object,\n  otherOptions?: JQuery.AjaxSettings\n) => {\n  return $.ajax({\n    url,\n    method,\n    data,\n    contentType: 'application/json',\n    ...otherOptions,\n  });\n};\n\nfunction init() {\n  renderDashboard();\n}\nwindow.addEventListener('DOMContentLoaded', init);\nwindow.addEventListener('load', () => (document.body.style.visibility = 'visible'));\n","import { GroupName } from './props';\n\n/** X/Y from top/left (in px) for each hex in one-based index format. */\nexport const hexLocations: Array<[number, number]> = [\n  [0, 0], // empty here because of zero-indexing\n  [600, 100], // 1\n  [600, 170], // 2\n  [600, 240], // 3\n  [547, 135], // 4\n  [547, 205], // 5\n  [547, 275], // 6\n  [547, 345], // 7\n  [547, 415], // 8\n  [494, 450], // 9\n  [494, 380], // 10\n  [494, 310], // 11\n  [494, 240], // 12\n  [494, 170], // 13\n  [494, 100], // 14\n  [441, 135], // 15\n  [441, 205], // 16\n  [441, 275], // 17\n  [441, 345], // 18\n  [441, 415], // 19\n  [441, 485], // 20\n  [388, 450], // 21\n  [388, 380], // 22\n  [388, 310], // 23\n  [388, 240], // 24\n  [388, 170], // 25\n  [335, 205], // 26\n  [335, 275], // 27\n  [335, 345], // 28\n  [335, 415], // 29\n  [335, 485], // 30\n  [282, 380], // 31\n  [282, 240], // 32\n];\n\n/** CSS-formatted colors for each group. */\nexport const colors: { [group in GroupName]: string } = {\n  france: '#3498db',\n  britain: '#e94858',\n  mohawk: '#82bf6e',\n  cherokee: '#9568d0',\n  shawnee: '#f18836',\n  miami: '#d075c3',\n  ojibwe: '#fedc30',\n};\n\nexport enum SemanticColors {\n  france = 'france',\n  britain = 'britain',\n  mohawk = 'mohawk',\n  cherokee = 'cherokee',\n  shawnee = 'shawnee',\n  miami = 'miami',\n  ojibwe = 'ojibwe',\n}\n\nexport enum Colors {\n  blue = 'france',\n  red = 'britain',\n  green = 'mohawk',\n  purple = 'cherokee',\n  orange = 'shawnee',\n  pink = 'miami',\n  yellow = 'ojibwe',\n}\n\nexport const defaultOwnersToHexes = {\n  france: [1, 4, 13, 14, 15, 16, 25],\n  britain: [2, 3, 5, 6, 7, 8, 9],\n  mohawk: [11, 12, 17, 18],\n  cherokee: [10, 19, 20],\n  shawnee: [21, 22, 29, 30],\n  miami: [23, 24, 28, 31],\n  ojibwe: [26, 27, 32],\n};\n","import * as React from 'react';\nimport { Component } from 'react';\nimport { SemanticColors, colors, Colors } from '../hexdata';\nimport { css } from 'emotion';\nimport './button.scss';\nimport { HTMLButtonProps, HTMLDivProps } from '../props';\nimport classNames from 'classnames';\nimport { EventPipe } from '../util';\n\ntype ButtonType = 'flat' | 'raised';\n\ninterface ButtonProps extends Omit<HTMLButtonProps, 'color' | 'type'> {\n  color?: SemanticColors | Colors;\n  type?: ButtonType;\n  htmlType?: 'button' | 'reset' | 'submit';\n  disabled?: boolean;\n  stateful?: boolean;\n}\n\ninterface ButtonState {\n  disabled: boolean;\n  color: SemanticColors | Colors | '#ddd';\n}\n\ninterface ButtonUpdate {\n  disabled?: boolean;\n  color?: SemanticColors | Colors | '#ddd';\n}\n\nexport class Button extends Component<ButtonProps, ButtonState> {\n  constructor(props: Readonly<ButtonProps>) {\n    super(props);\n\n    const { disabled, color, stateful } = this.props;\n\n    if (stateful) {\n      this.state = {\n        disabled: disabled ?? false,\n        color: color ?? '#ddd',\n      };\n    }\n  }\n\n  modify(newState: ButtonUpdate) {\n    if (this.props.stateful) {\n      this.setState({\n        color: newState.color ?? this.state.color,\n        disabled: newState.disabled ?? this.state.disabled,\n      });\n    } else throw new Error('Error: modify() called on a stateless button.');\n  }\n\n  render() {\n    const {\n      color: _,\n      disabled: __,\n      className,\n      children,\n      htmlType,\n      type,\n      ...otherProps\n    } = this.props;\n\n    let color: SemanticColors | Colors | '#ddd', disabled: boolean;\n\n    if (this.props.stateful) {\n      color = this.state.color;\n      disabled = this.state.disabled;\n    } else {\n      color = this.props.color!;\n      disabled = this.props.disabled!;\n    }\n\n    const buttonColor = colors[color ?? ''] ?? '#ddd';\n    const colorWithOpacity = buttonColor + (disabled ? '33' : 'ff');\n    return (\n      <button\n        {...otherProps}\n        disabled={disabled}\n        type={htmlType}\n        className={classNames(\n          'button',\n          type == undefined ? 'raised' : type,\n          css({\n            background: colorWithOpacity,\n            '&:hover:not(:disabled)': {\n              background: 'transparent',\n              color: buttonColor,\n              border: '2px solid ' + buttonColor,\n            },\n          }),\n          className\n        )}\n      >\n        {children}\n      </button>\n    );\n  }\n}\n\nexport interface IconButtonProps extends Omit<HTMLButtonProps, 'color' | 'type'> {\n  icon: string;\n  htmlType?: 'button' | 'reset' | 'submit';\n}\n\nexport class IconButton extends React.Component<IconButtonProps> {\n  render() {\n    const { icon, htmlType, className, ...otherProps } = this.props;\n    return (\n      <button className={classNames('icon-button', className)} type={htmlType} {...otherProps}>\n        <Icon icon={icon} />\n      </button>\n    );\n  }\n}\n\ninterface IconProps extends HTMLDivProps {\n  icon: string;\n}\n\nexport class Icon extends Component<IconProps, {}> {\n  render() {\n    const { icon, className, ...otherProps } = this.props;\n    return <i className={classNames('icon', icon, className)} {...otherProps}></i>;\n  }\n}\n","import * as React from 'react';\nimport { Component } from 'react';\nimport classNames from 'classnames';\nimport './header.scss';\nimport { HTMLDivProps, Alignment } from '../props';\n\nclass HeaderText extends Component<HTMLDivProps, {}> {\n  render() {\n    const { className, children, ...otherProps } = this.props;\n    return <span className={classNames('text', className)} {...otherProps}>{children}</span>;\n  }\n}\n\nclass HeaderTitle extends Component<HTMLDivProps, {}> {\n  render() {\n    const { className, children, ...otherProps } = this.props;\n    return <h1 className={classNames('title', className)} {...otherProps}>{children}</h1>;\n  }\n}\n\nexport class Header extends Component<HTMLDivProps, {}> {\n  static Text = HeaderText;\n  static Title = HeaderTitle;\n\n  render() {\n    const { className, children, ...otherProps } = this.props;\n    return (\n      <div {...otherProps} className={classNames('header', className)}>\n        {children}\n      </div>\n    );\n  }\n}\n/* \n<h1 id=\"header-title\">{title ?? '1754'}</h1>\n<div className=\"spacer\"></div>\n<span className=\"header-text header-text--login\"></span>\n<button className=\"header-button header-button--login\">Login</button> \n*/\n\nexport class Spacer extends Component {\n  render() {\n    return <div style={{ flexGrow: 1 }}></div>;\n  }\n}\n"],"sourceRoot":""}