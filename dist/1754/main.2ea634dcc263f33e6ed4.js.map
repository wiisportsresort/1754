{"version":3,"sources":["webpack:///./src/1754/common/hexdata.ts","webpack:///./src/1754/common/components/button.tsx","webpack:///./src/1754/common/components/header.tsx","webpack:///./src/1754/common/util.ts","webpack:///./src/1754/main/index.tsx","webpack:///./src/1754/main/components/hexes.tsx","webpack:///./src/1754/main/components/navbar.tsx"],"names":["hexLocations","colors","france","britain","mohawk","cherokee","shawnee","miami","ojibwe","SemanticColors","Colors","defaultOwnersToHexes","props","disabled","color","stateful","state","modify","newState","this","Error","setState","render","className","children","htmlType","type","buttonColor","colorWithOpacity","otherProps","undefined","css","background","border","Component","Button","icon","Icon","React","IconButton","Text","HeaderText","Title","HeaderTitle","Header","style","flexGrow","Spacer","capitalize","string","toUpperCase","slice","listeners","on","callback","push","cancel","stack","i","l","length","splice","dispatch","event","call","defaultPrevented","EventPipe","initialHexes","groups","hexesToOwners","ownersToHexes","Array","isArray","Object","keys","entries","array","Group","group","hex","CustomEvent","Game","game","window","addEventListener","_event","ReactDOM","Navbar","id","data","Hexes","document","querySelector","$","location","href","body","visibility","hexComponents","HexWrapper","key","hexNumber","offset","owner","componentDidMount","detail","makeContextMenuItems","counter","menuItems","MenuItem","divider","width","height","xmlns","xmlnsXlink","viewBox","stroke","fill","strokeWidth","d","newOwner","oldOwner","onClick","clickHandler","bind","resetData","reset","e","onShowContextMenu","onHideContextMenu","ContextMenuTrigger","holdToDisplay","Hex","number","left","top","ContextMenu","onShow","onHide","onSelect","onMouseDown","version","xmlSpace","x","y","MozUserSelect","WebkitUserSelect","msUserSelect","userSelect","transform","counts","_props","scoreButtons","ScoreButton","value"],"mappings":"2IAGa,EAAAA,aAAwC,CACnD,CAAC,EAAG,GACJ,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAIK,EAAAC,OAA2C,CACtDC,OAAQ,UACRC,QAAS,UACTC,OAAQ,UACRC,SAAU,UACVC,QAAS,UACTC,MAAO,UACPC,OAAQ,WAGV,SAAYC,GACV,kBACA,oBACA,kBACA,sBACA,oBACA,gBACA,kBAPF,CAAY,EAAAA,iBAAA,EAAAA,eAAc,KAU1B,SAAYC,GACV,gBACA,gBACA,iBACA,oBACA,mBACA,eACA,kBAPF,CAAY,EAAAA,SAAA,EAAAA,OAAM,KAUL,EAAAC,qBAAuB,CAClCT,OAAQ,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAC/BC,QAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5BC,OAAQ,CAAC,GAAI,GAAI,GAAI,IACrBC,SAAU,CAAC,GAAI,GAAI,IACnBC,QAAS,CAAC,GAAI,GAAI,GAAI,IACtBC,MAAO,CAAC,GAAI,GAAI,GAAI,IACpBC,OAAQ,CAAC,GAAI,GAAI,M,i+BC7EnB,WACA,OACA,OACA,QACA,KAEA,WAuBA,cACE,WAAYI,GAAZ,MACE,YAAMA,IAAM,KAEN,UAAEC,EAAA,EAAAA,SAAUC,EAAA,EAAAA,M,OAAO,EAAAC,WAGvB,EAAKC,MAAQ,CACXH,SAAUA,WACVC,MAAOA,UAAS,S,EA4DxB,OArE4B,OAc1B,YAAAG,OAAA,SAAOC,G,QACL,IAAIC,KAAKP,MAAMG,SAKR,MAAM,IAAIK,MAAM,iDAJrBD,KAAKE,SAAS,CACZP,MAAqB,QAAhB,EAAEI,EAASJ,aAAK,QAAIK,KAAKH,MAAMF,MACpCD,SAA2B,QAAnB,EAAEK,EAASL,gBAAQ,QAAIM,KAAKH,MAAMH,YAKhD,YAAAS,OAAA,W,MAWMR,EAAyCD,EAVvC,aAGJU,GAFA,EAAAT,MACA,EAAAD,SACA,EAAAU,WACAC,EAAA,EAAAA,SACAC,EAAA,EAAAA,SACAC,EAAA,EAAAA,KACA,qEAKEP,KAAKP,MAAMG,UACbD,EAAQK,KAAKH,MAAMF,MACnBD,EAAWM,KAAKH,MAAMH,WAEtBC,EAAQK,KAAKP,MAAME,MACnBD,EAAWM,KAAKP,MAAMC,UAGxB,IAAMc,EAAiC,QAAtB,EAAG,EAAA1B,OAAOa,UAAS,WAAG,QAAI,OACrCc,EAAmBD,GAAed,EAAW,KAAO,MAC1D,OACE,8BACMgB,EAAU,CACdhB,SAAUA,EACVa,KAAMD,EACNF,UAAW,UACT,SACQO,MAARJ,EAAoB,SAAWA,EAC/B,EAAAK,IAAI,CACFC,WAAYJ,EACZ,yBAA0B,CACxBI,WAAY,cACZlB,MAAOa,EACPM,OAAQ,aAAeN,KAG3BJ,KAGDC,IAIT,EArEA,CAA4B,EAAAU,WAAf,EAAAC,SA4Eb,+B,+CASA,OATgC,OAC9B,YAAAb,OAAA,WACE,IAAM,aAAEc,EAAA,EAAAA,KAAMX,EAAA,EAAAA,SAAUF,EAAA,EAAAA,UAAW,uCACnC,OACE,4BAAQA,UAAW,UAAW,cAAeA,GAAYG,KAAMD,GAAcI,GAC3E,gBAACQ,EAAI,CAACD,KAAMA,MAIpB,EATA,CAAgCE,EAAMJ,WAAzB,EAAAK,aAeb,+B,+CAKA,OAL0B,OACxB,YAAAjB,OAAA,WACE,IAAM,aAAEc,EAAA,EAAAA,KAAMb,EAAA,EAAAA,UAAW,4BACzB,OAAO,uBAAGA,UAAW,UAAW,OAAQa,EAAMb,IAAgBM,KAElE,EALA,CAA0B,EAAAK,WAAb,EAAAG,Q,m/BCxHb,WACA,OACA,OACA,KAGA,+B,+CAKA,OALyB,OACvB,YAAAf,OAAA,WACE,IAAM,aAAEC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,SAAU,gCAC7B,OAAO,0BAAMD,UAAW,UAAW,OAAQA,IAAgBM,GAAaL,IAE5E,EALA,CAAyB,EAAAU,WAOzB,2B,+CAKA,OAL0B,OACxB,YAAAZ,OAAA,WACE,IAAM,aAAEC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,SAAU,gCAC7B,OAAO,wBAAID,UAAW,UAAW,QAASA,IAAgBM,GAAaL,IAE3E,EALA,CAA0B,EAAAU,WAO1B,2B,+CAYA,OAZ4B,OAI1B,YAAAZ,OAAA,WACE,IAAM,aAAEC,EAAA,EAAAA,UAAWC,EAAA,EAAAA,SAAU,gCAC7B,OACE,2BAASK,EAAU,CAAEN,UAAW,UAAW,SAAUA,KAClDC,IAPA,EAAAgB,KAAOC,EACP,EAAAC,MAAQC,EAUjB,EAZA,CAA4B,EAAAT,WAAf,EAAAU,SAoBb,+B,+CAIA,OAJ4B,OAC1B,YAAAtB,OAAA,WACE,OAAO,uBAAKuB,MAAO,CAAEC,SAAU,MAEnC,EAJA,CAA4B,EAAAZ,WAAf,EAAAa,U,mGCvCA,EAAAC,WAAa,SAACC,GAAmB,OAAAA,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,IAErF,iBAGE,aACEhC,KAAKiC,UAAY,GAiCrB,OA9BE,YAAAC,GAAA,SAAG3B,EAAc4B,GACT5B,KAAQP,KAAKiC,YACjBjC,KAAKiC,UAAU1B,GAAQ,IAEzBP,KAAKiC,UAAU1B,GAAM6B,KAAKD,IAG5B,YAAAE,OAAA,SAAO9B,EAAc4B,GACnB,GAAM5B,KAAQP,KAAKiC,UAInB,IADA,IAAIK,EAAQtC,KAAKiC,UAAU1B,GAClBgC,EAAI,EAAGC,EAAIF,EAAMG,OAAQF,EAAIC,EAAGD,IACvC,GAAID,EAAMC,KAAOJ,EAEf,YADAG,EAAMI,OAAOH,EAAG,IAMtB,YAAAI,SAAA,SAASC,GACP,KAAMA,EAAMrC,QAAQP,KAAKiC,WACvB,OAAO,EAGT,IADA,IAAIK,EAAQtC,KAAKiC,UAAUW,EAAMrC,MAAMyB,QAC9BO,EAAI,EAAGC,EAAIF,EAAMG,OAAQF,EAAIC,EAAGD,IACvCD,EAAMC,GAAGM,KAAK7C,KAAM4C,GAEtB,OAAQA,EAAME,kBAElB,EArCA,GAAa,EAAAC,a,mqCCHb,WACA,OACA,QAEA,QACA,QACA,QACA,OACA,OACA,OAIA,EAKE,W,IAAY,sDACV/C,KAAKgD,aAAeA,GAIxB,cAQE,WAAYC,G,qBAAA,IAAAA,MAA4D,EAAAzD,sBAAxE,MACE,cAAO,KAMP,GAJA,EAAK0D,cAAgB,GACrB,EAAKC,cAAgB,GAGjBC,MAAMC,QAAQJ,EAAOK,OAAOC,KAAKN,GAAQ,K,IAC3C,IAA4B,QAAAK,OAAOE,QAAQP,IAAO,8BAAE,CAAzC,mBAAC,OAAMQ,EAAA,KAChBR,EAAO,GAAQ,IAAIS,EAAK,WAALA,EAAK,WAAID,M,qGAIhC,IAA4B,QAAAH,OAAOE,QAAQP,IAAO,8BAAE,CAAzC,mBAAC,OAAMU,EAAA,KAChB,EAAKR,cAAc,GAAQQ,EAAMX,a,IACjC,IAAkB,kBAAAW,EAAMX,eAAY,8BAAE,CAAjC,IAAMY,EAAG,QACZ,EAAKV,cAAcU,GAAO,G,oMAc9B,OAVA,EAAK1B,GAAG,SAAS,SAAAU,G,YACf,EAAKO,cAAgB,EAAA3D,qB,IACrB,IAAoB,QAAA8D,OAAOC,KAAK,EAAA/D,uBAAqB,8BAAE,CAAlD,IAAMmE,EAAK,Q,IACd,IAAkB,oBAAAnE,qBAAqBmE,KAAM,8BAAE,CAA1C,IAAMC,EAAG,QACZ,EAAKV,cAAcU,GAAOD,G,oMAG9B,EAAKhB,SAAS,IAAIkB,YAAY,gBAC9B,EAAKlB,SAAS,IAAIkB,YAAY,kBAEzB,EAEX,OAxC0B,OAwC1B,EAxCA,CAA0B,EAAAd,WAAb,EAAAe,OA0Cb,IAAMC,EAAO,IAAID,EAoGjBE,OAAOC,iBAAiB,oBAlGxB,SAAcC,GAQZC,EAAShE,OACP,gCACE,uBAAKC,UAAU,UAEf,gBAAC,EAAAqB,OAAM,KACL,gBAAC,EAAAA,OAAOF,MAAK,aACb,gBAAC,EAAAK,OAAM,MACP,gBAAC,EAAAH,OAAOJ,KAAI,gCACZ,gBAAC,EAAAL,OAAM,CAACT,KAAK,SAASH,UAAU,gBAAc,UAKhD,uBAAKA,UAAU,aACb,gBAAC,EAAAgE,OAAM,CAACL,KAAMA,EAAM3D,UAAU,WAC9B,uBAAKA,UAAU,UACb,0BAAQiE,GAAG,oBAAoBC,KAAK,oBAAoB/D,KAAK,kBAC7D,gBAAC,EAAAgE,MAAK,CAACR,KAAMA,EAAM3D,UAAU,YAIjC,sBAAIA,UAAU,eAAa,cAE3B,uBAAKA,UAAU,kBACb,uBAAKA,UAAU,WACb,uRAMA,uBAAKA,UAAU,QACb,2BACE,4CACA,sCACA,wCAGF,2BACE,4CACA,sCACA,uCACA,sCAGF,2BACE,4CACA,sCACA,yCAGF,+BAKN,sBAAIA,UAAU,eAAa,SAE3B,uBAAKA,UAAU,kBACb,sBAAIA,UAAU,WACZ,+FACA,kFACA,oMAIA,2FACA,uJAIA,2HAIA,sIAIA,2EACA,gHAINoE,SAASC,cAAc,SAGzBC,EAAE,iBAAiBxC,GAAG,SAAS,WAAM,OAACyC,SAASC,KAAO,gBAIxDZ,OAAOC,iBAAiB,QAAQ,WAAM,OAACO,SAASK,KAAKnD,MAAMoD,WAAa,c,syCCtKxE,WACA,OACA,OACA,QAEA,OAEA,QAMA,2B,+CAaA,OAb2B,OACzB,YAAA3E,OAAA,WAGE,IAFA,IAAM,aAAE4D,EAAA,EAAAA,KAAM3D,EAAA,EAAAA,UAAW,4BACnB2E,EAAoC,GACjCxC,EAAI,EAAGA,EAAI,eAAIE,OAAQF,IAC9BwC,EAAc3C,KAAK,gBAAC4C,EAAU,CAACC,IAAK1C,EAAGwB,KAAMA,EAAMmB,UAAW3C,EAAG4C,OAAQ,eAAI5C,MAE/E,OACE,yBAAKnC,UAAWA,GAAeM,GAC5BqE,IAIT,EAbA,CAA2B,EAAAhE,WAAd,EAAAwD,QAqBb,kBAGE,WAAY9E,GAAZ,MACE,YAAMA,IAAM,K,OAEZ,EAAKI,MAAQ,CACXuF,MAAO,EAAK3F,MAAMsE,KAAKb,cAAc,EAAKzD,MAAMyF,YAGlD,EAAKA,UAAY,EAAKzF,MAAMyF,U,EA8IhC,OAxJyB,OAavB,YAAAG,kBAAA,sBACErF,KAAKP,MAAMsE,KAAK7B,GAAG,cAAc,WAC/B,EAAKhC,SAAS,CACZkF,MAAO,EAAK3F,MAAMsE,KAAKb,cAAc,EAAKgC,gBAG9ClF,KAAKP,MAAMsE,KAAK7B,GAAG,YAAY,SAACU,GAC1BA,EAAM0C,OAAOJ,WAAa,EAAKA,WACjC,EAAKhF,SAAS,CACZkF,MAAO,EAAK3F,MAAMsE,KAAKb,cAAc,EAAKgC,iBAKlD,YAAAK,qBAAA,SAAqBL,G,QACfM,EAAU,EACRC,EAAgC,GACtCA,EAAUrD,KACR,wBAAM6C,IAAKO,IAAWpF,UAAU,mC,OACzB8E,GAEP,gBAAC,EAAAQ,SAAQ,CAACT,IAAKO,IAAWG,SAAO,K,IAEnC,IAAoB,QAAArC,OAAOC,KAAK,EAAAzE,SAAsB,8BAAE,CAAnD,IAAM6E,EAAK,QACR1C,EACJ,uBACES,MAAO,CAAEkE,MAAO,OAAQC,OAAQ,QAChCxB,GAAG,eACHyB,MAAM,6BACNC,WAAW,+BACXC,QAAQ,aAER,qCACA,yBACE,wBACEC,OAAO,QACPC,KAAM,EAAApH,OAAO6E,GACbwC,YAAY,IACZC,EAAE,qCAMJ9B,EAA4B,CAChC+B,SAAU1C,EACVuB,UAAWA,EACXoB,SAAUtG,KAAKH,MAAMuF,OAGvBK,EAAUrD,KACR,gBAAC,EAAAsD,SAAQ,CACPtF,UAAU,oCACV6E,IAAKO,IACLlB,KAAMA,EACNiC,QAASvG,KAAKwG,aAAaC,KAAKzG,OAE/BiB,E,IAAO,EAAAY,WAAW8B,M,iGAKzB,IAAM+C,EAAiC,CACrCC,OAAO,EACPzB,UAAWA,GASb,OANAO,EAAUrD,KACR,gBAAC,EAAAsD,SAAQ,CAACT,IAAKO,IAAWG,SAAO,IACjC,gBAAC,EAAAD,SAAQ,CAACT,IAAKO,IAAWlB,KAAMoC,EAAWH,QAASvG,KAAKwG,aAAaC,KAAKzG,OAAK,UAI3EyF,GAGT,YAAAe,aAAA,SAAatC,EAAaoB,GACxB,GAAIA,EAAOqB,MACT3G,KAAKP,MAAMsE,KAAKpB,SACd,IAAIkB,YAAY,WAAY,CAC1ByB,OAAQ,CACNqB,OAAO,EACPzB,UAAWlF,KAAKkF,kBALxB,CAYA,IAAM0B,EAAI,IAAI/C,YAAY,YAAa,CAAEyB,OAAM,IAC/CtF,KAAKP,MAAMsE,KAAKpB,SAASiE,GAEzB5G,KAAKE,SAAS,CAAEkF,MAAOE,EAAOe,aAGhC,YAAAQ,kBAAA,WACEnC,EAAE,UACC9D,IAAI,CACHiF,OAAQ,QACRD,MAAO,UAER1D,GAAG,SAAS,WACXwC,EAAE,UAAU9D,IAAI,CACdiF,OAAQ,IACRD,MAAO,MAGT,iBAIN,YAAAkB,kBAAA,WACEpC,EAAE,UAAU9D,IAAI,CACdiF,OAAQ,IACRD,MAAO,OAIX,YAAAzF,OAAA,WACE,OACE,gCACE,gBAAC,EAAA4G,mBAAkB,CAACC,cAAe,EAAG3C,GAAI,MAAMrE,KAAKP,MAAMyF,UAAS,iBAClE,gBAAC+B,EAAG,CACFC,OAAQlH,KAAKP,MAAMyF,UACnBE,MAAOpF,KAAKH,MAAMuF,MAClB+B,KAAMnH,KAAKP,MAAM0F,OAAO,GACxBiC,IAAKpH,KAAKP,MAAM0F,OAAO,MAG3B,gBAAC,EAAAkC,YAAW,CACVC,OAAQtH,KAAK6G,kBACbU,OAAQvH,KAAK8G,kBACbzC,GAAI,MAAMrE,KAAKP,MAAMyF,UAAS,iBAE7BlF,KAAKuF,qBAAqBvF,KAAKP,MAAMyF,cAKhD,EAxJA,CAAyB,EAAAnE,WAiKzB,2B,+CA4CA,OA5CkB,OAChB,YAAAZ,OAAA,WACE,OACE,uBACEqH,SAAU,WAAM,UAChBC,YAAa,WAAM,UACnBC,QAAQ,MACR5B,MAAM,6BACNC,WAAW,+BACX4B,SAAS,WACTC,EAAE,MACFC,EAAE,MACF7B,QAAQ,YACR3B,GAAI,MAAMrE,KAAKP,MAAMyH,OACrB9G,UAAU,MACVsB,MAAO,CACL0F,IAAKpH,KAAKP,MAAM2H,IAAM,KACtBD,KAAMnH,KAAKP,MAAM0H,KAAO,KACxBW,cAAe,OACfC,iBAAkB,OAClBC,aAAc,OACdC,WAAY,SAGd,6B,OAAYjI,KAAKP,MAAMyH,QACvB,wBACE9G,UAAU,SACVsB,MAAO,CACLwE,KAAM,EAAApH,OAAOkB,KAAKP,MAAM2F,QAE1Bf,GAAI,MAAMrE,KAAKP,MAAMyH,OAAM,OAC3Bd,EAAE,+MAGJ,wBACE8B,UAAU,+BACV9H,UAAU,OACViE,GAAI,MAAMrE,KAAKP,MAAMyH,OAAM,QAE1BlH,KAAKP,MAAMyH,UAKtB,EA5CA,CAAkB,EAAAnG,Y,oyCCnMlB,WACA,OACA,OACA,QACA,OAQA,cACE,WAAYtB,G,QAAZ,EACE,YAAMA,IAAM,KAEZ,EAAKI,MAAQ,CAAEsI,OAAQ,IAEf,IAAAhF,EAAA,aAAAA,c,IAER,IAAoB,QAAAG,OAAOC,KAAK,EAAAzE,SAAsB,8BAAE,CAAnD,IAAM6E,EAAK,QACd,EAAK9D,MAAMsI,OAAOxE,GAASR,EAAcQ,GAAOlB,Q,0GA6CtD,OAtD4B,OAY1B,YAAA4C,kBAAA,sBACErF,KAAKP,MAAMsE,KAAK7B,GAAG,aAAa,SAACU,GACzB,eAAE0D,EAAA,EAAAA,SAAUD,EAAA,EAAAA,SAClB,GAAgB1F,MAAZ2F,GAAqC3F,MAAZ0F,EAC3B,MAAM,IAAIpG,MAAM,0EAElB,EAAKC,UAAS,SAACL,EAAOuI,GAGpB,OAFAvI,EAAMsI,OAAO7B,KACbzG,EAAMsI,OAAO9B,KACNxG,QAGXG,KAAKP,MAAMsE,KAAK7B,GAAG,eAAe,W,QACxBiB,EAAA,aAAAA,cACFpD,EAAW,CAAEoI,OAAQ,I,IAC3B,IAAoB,QAAA7E,OAAOC,KAAK,EAAAzE,SAAO,8BAAE,CAApC,IAAM6E,EAAK,QACd5D,EAASoI,OAAOxE,GAASR,EAAcQ,GAAOlB,Q,iGAEhD,EAAKvC,SAASH,OAIlB,YAAA4G,MAAA,WACE3G,KAAKP,MAAMsE,KAAKpB,SAAS,IAAIkB,YAAY,WAG3C,YAAA1D,OAAA,W,QACQkI,EAAmC,G,IACzC,IAAkB,QAAA/E,OAAOC,KAAK,EAAAzE,SAAsB,8BAAE,CAAjD,IAAI6E,EAAK,QACZ0E,EAAajG,KAAK,gBAACkG,EAAW,CAACrD,IAAKtB,EAAOA,MAAOA,EAAO4E,MAAOvI,KAAKH,MAAMsI,OAAOxE,O,iGAGpF,IAAM,aAAEvD,EAAA,EAAAA,UAAiB,GAAN,EAAA2D,KAAM,2BACzB,OACE,yBAAK3D,UAAWA,GAAeM,GAC7B,gBAAC,EAAAM,OAAM,CAACqD,GAAG,sBAAsB9D,KAAK,OAAOgG,QAASvG,KAAK2G,OACzD,qBAAGvG,UAAU,oB,UAEdiI,IAIT,EAtDA,CAA4B,EAAAtH,WAAf,EAAAqD,SAwDb,+B,+CAeA,OAfiC,OAC/B,YAAAjE,OAAA,WACQ,iBAAEwD,EAAA,EAAAA,MAAO4E,EAAA,EAAAA,MACT7I,EAAqB,IAAV6I,EACjB,OACE,gBAAC,EAAAvH,OAAM,CACLtB,SAAUA,EACV2E,GAAI,gBAAgBV,EACpBpD,KAAK,SACLZ,MAAO,EAAAL,eAAeqE,IAErB,EAAA9B,WAAW8B,G,KAAS,wBAAMU,GAAI,SAASV,GAAU4E,KAI1D,EAfA,CAAiC,EAAAxH,WAApB,EAAAuH,e","file":"main.2ea634dcc263f33e6ed4.js","sourcesContent":["import { GroupName } from './props';\n\n/** X/Y from top/left (in px) for each hex in one-based index format. */\nexport const hexLocations: Array<[number, number]> = [\n  [0, 0], // empty here because of zero-indexing\n  [600, 100], // 1\n  [600, 170], // 2\n  [600, 240], // 3\n  [547, 135], // 4\n  [547, 205], // 5\n  [547, 275], // 6\n  [547, 345], // 7\n  [547, 415], // 8\n  [494, 450], // 9\n  [494, 380], // 10\n  [494, 310], // 11\n  [494, 240], // 12\n  [494, 170], // 13\n  [494, 100], // 14\n  [441, 135], // 15\n  [441, 205], // 16\n  [441, 275], // 17\n  [441, 345], // 18\n  [441, 415], // 19\n  [441, 485], // 20\n  [388, 450], // 21\n  [388, 380], // 22\n  [388, 310], // 23\n  [388, 240], // 24\n  [388, 170], // 25\n  [335, 205], // 26\n  [335, 275], // 27\n  [335, 345], // 28\n  [335, 415], // 29\n  [335, 485], // 30\n  [282, 380], // 31\n  [282, 240], // 32\n];\n\n/** CSS-formatted colors for each group. */\nexport const colors: { [group in GroupName]: string } = {\n  france: '#3498db',\n  britain: '#e94858',\n  mohawk: '#82bf6e',\n  cherokee: '#9568d0',\n  shawnee: '#f18836',\n  miami: '#d075c3',\n  ojibwe: '#fedc30',\n};\n\nexport enum SemanticColors {\n  france = 'france',\n  britain = 'britain',\n  mohawk = 'mohawk',\n  cherokee = 'cherokee',\n  shawnee = 'shawnee',\n  miami = 'miami',\n  ojibwe = 'ojibwe',\n}\n\nexport enum Colors {\n  blue = 'france',\n  red = 'britain',\n  green = 'mohawk',\n  purple = 'cherokee',\n  orange = 'shawnee',\n  pink = 'miami',\n  yellow = 'ojibwe',\n}\n\nexport const defaultOwnersToHexes = {\n  france: [1, 4, 13, 14, 15, 16, 25],\n  britain: [2, 3, 5, 6, 7, 8, 9],\n  mohawk: [11, 12, 17, 18],\n  cherokee: [10, 19, 20],\n  shawnee: [21, 22, 29, 30],\n  miami: [23, 24, 28, 31],\n  ojibwe: [26, 27, 32],\n};\n","import * as React from 'react';\nimport { Component } from 'react';\nimport { SemanticColors, colors, Colors } from '../hexdata';\nimport { css } from 'emotion';\nimport './button.scss';\nimport { HTMLButtonProps, HTMLDivProps } from '../props';\nimport classNames from 'classnames';\nimport { EventPipe } from '../util';\n\ntype ButtonType = 'flat' | 'raised';\n\ninterface ButtonProps extends Omit<HTMLButtonProps, 'color' | 'type'> {\n  color?: SemanticColors | Colors;\n  type?: ButtonType;\n  htmlType?: 'button' | 'reset' | 'submit';\n  disabled?: boolean;\n  stateful?: boolean;\n}\n\ninterface ButtonState {\n  disabled: boolean;\n  color: SemanticColors | Colors | '#ddd';\n}\n\ninterface ButtonUpdate {\n  disabled?: boolean;\n  color?: SemanticColors | Colors | '#ddd';\n}\n\nexport class Button extends Component<ButtonProps, ButtonState> {\n  constructor(props: Readonly<ButtonProps>) {\n    super(props);\n\n    const { disabled, color, stateful } = this.props;\n\n    if (stateful) {\n      this.state = {\n        disabled: disabled ?? false,\n        color: color ?? '#ddd',\n      };\n    }\n  }\n\n  modify(newState: ButtonUpdate) {\n    if (this.props.stateful) {\n      this.setState({\n        color: newState.color ?? this.state.color,\n        disabled: newState.disabled ?? this.state.disabled,\n      });\n    } else throw new Error('Error: modify() called on a stateless button.');\n  }\n\n  render() {\n    const {\n      color: _,\n      disabled: __,\n      className,\n      children,\n      htmlType,\n      type,\n      ...otherProps\n    } = this.props;\n\n    let color: SemanticColors | Colors | '#ddd', disabled: boolean;\n\n    if (this.props.stateful) {\n      color = this.state.color;\n      disabled = this.state.disabled;\n    } else {\n      color = this.props.color!;\n      disabled = this.props.disabled!;\n    }\n\n    const buttonColor = colors[color ?? ''] ?? '#ddd';\n    const colorWithOpacity = buttonColor + (disabled ? '33' : 'ff');\n    return (\n      <button\n        {...otherProps}\n        disabled={disabled}\n        type={htmlType}\n        className={classNames(\n          'button',\n          type == undefined ? 'raised' : type,\n          css({\n            background: colorWithOpacity,\n            '&:hover:not(:disabled)': {\n              background: 'transparent',\n              color: buttonColor,\n              border: '2px solid ' + buttonColor,\n            },\n          }),\n          className\n        )}\n      >\n        {children}\n      </button>\n    );\n  }\n}\n\nexport interface IconButtonProps extends Omit<HTMLButtonProps, 'color' | 'type'> {\n  icon: string;\n  htmlType?: 'button' | 'reset' | 'submit';\n}\n\nexport class IconButton extends React.Component<IconButtonProps> {\n  render() {\n    const { icon, htmlType, className, ...otherProps } = this.props;\n    return (\n      <button className={classNames('icon-button', className)} type={htmlType} {...otherProps}>\n        <Icon icon={icon} />\n      </button>\n    );\n  }\n}\n\ninterface IconProps extends HTMLDivProps {\n  icon: string;\n}\n\nexport class Icon extends Component<IconProps, {}> {\n  render() {\n    const { icon, className, ...otherProps } = this.props;\n    return <i className={classNames('icon', icon, className)} {...otherProps}></i>;\n  }\n}\n","import * as React from 'react';\nimport { Component } from 'react';\nimport classNames from 'classnames';\nimport './header.scss';\nimport { HTMLDivProps, Alignment } from '../props';\n\nclass HeaderText extends Component<HTMLDivProps, {}> {\n  render() {\n    const { className, children, ...otherProps } = this.props;\n    return <span className={classNames('text', className)} {...otherProps}>{children}</span>;\n  }\n}\n\nclass HeaderTitle extends Component<HTMLDivProps, {}> {\n  render() {\n    const { className, children, ...otherProps } = this.props;\n    return <h1 className={classNames('title', className)} {...otherProps}>{children}</h1>;\n  }\n}\n\nexport class Header extends Component<HTMLDivProps, {}> {\n  static Text = HeaderText;\n  static Title = HeaderTitle;\n\n  render() {\n    const { className, children, ...otherProps } = this.props;\n    return (\n      <div {...otherProps} className={classNames('header', className)}>\n        {children}\n      </div>\n    );\n  }\n}\n/* \n<h1 id=\"header-title\">{title ?? '1754'}</h1>\n<div className=\"spacer\"></div>\n<span className=\"header-text header-text--login\"></span>\n<button className=\"header-button header-button--login\">Login</button> \n*/\n\nexport class Spacer extends Component {\n  render() {\n    return <div style={{ flexGrow: 1 }}></div>;\n  }\n}\n","/** Captializes the first letter in the string. */\nexport const capitalize = (string: string) => string[0].toUpperCase() + string.slice(1);\n\nexport class EventPipe {\n  listeners: {};\n\n  constructor() {\n    this.listeners = {};\n  }\n\n  on(type: string, callback: (event: CustomEvent) => any) {\n    if (!(type in this.listeners)) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(callback);\n  }\n\n  cancel(type: string, callback: any) {\n    if (!(type in this.listeners)) {\n      return;\n    }\n    var stack = this.listeners[type];\n    for (var i = 0, l = stack.length; i < l; i++) {\n      if (stack[i] === callback) {\n        stack.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  dispatch(event: CustomEvent) {\n    if (!(event.type in this.listeners)) {\n      return true;\n    }\n    var stack = this.listeners[event.type].slice();\n    for (var i = 0, l = stack.length; i < l; i++) {\n      stack[i].call(this, event);\n    }\n    return !event.defaultPrevented;\n  }\n}\n","import * as $ from 'jquery';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport snackbar from 'snackbar';\nimport { Hexes } from './components/hexes';\nimport { Navbar } from './components/navbar';\nimport { EventPipe } from '../common/util';\nimport { defaultOwnersToHexes } from '../common/hexdata';\nimport { Header, Spacer } from '../common/components/header';\nimport { Button } from '../common/components/button';\nimport { GroupName } from '../common/props';\n\n/** A representation of a country/tribe. */\nclass Group {\n  initialHexes: number[];\n  /**\n   * @param {...number} initialHexes - numbers of the hexes this group starts with.\n   */\n  constructor(...initialHexes: number[]) {\n    this.initialHexes = initialHexes;\n  }\n}\n\nexport class Game extends EventPipe {\n  hexesToOwners: {};\n  ownersToHexes: {};\n \n  /**\n   * Create a new board with hexes, navbar, and event handler.\n   * @param groups groups with their initial owned hexes; can be either an object with arrays of numbers or the instances of `Group`, arrays will be converted to instances if provided.\n   */\n  constructor(groups: Array<Group> | { [owner in GroupName]: number[] } = defaultOwnersToHexes) {\n    super();\n\n    this.hexesToOwners = {};\n    this.ownersToHexes = {};\n\n    // change into group instances\n    if (Array.isArray(groups[Object.keys(groups)[0]])) {\n      for (const [name, array] of Object.entries(groups)) {\n        groups[name] = new Group(...array);\n      }\n    }\n\n    for (const [name, group] of Object.entries(groups)) {\n      this.ownersToHexes[name] = group.initialHexes;\n      for (const hex of group.initialHexes) {\n        this.hexesToOwners[hex] = name;\n      }\n    }\n\n    this.on('reset', event => {\n      this.ownersToHexes = defaultOwnersToHexes;\n      for (const group of Object.keys(defaultOwnersToHexes)) {\n        for (const hex of defaultOwnersToHexes[group]) {\n          this.hexesToOwners[hex] = group;\n        }\n      }\n      this.dispatch(new CustomEvent('navbarreset'));\n      this.dispatch(new CustomEvent('hexesreset'));\n    });\n    return this;\n  }\n}\n\nconst game = new Game();\n\nfunction init(_event: any) {\n  // if (window.innerWidth < 800)\n  //   snackbar.show(\n  //     'Your screen may be too small to properly display this website. Consider using a screen greater than 800px in width.'\n  //   );\n\n  // game.drawHexes('.hexes').drawNavbar('.navbar');\n\n  ReactDOM.render(\n    <>\n      <div className=\"modal\"></div>\n\n      <Header>\n        <Header.Title>1754</Header.Title>\n        <Spacer />\n        <Header.Text>Offline (not logged in)</Header.Text>\n        <Button type=\"raised\" className=\"button-login\">\n          Login\n        </Button>\n      </Header>\n\n      <div className=\"container\">\n        <Navbar game={game} className=\"navbar\" />\n        <div className=\"window\">\n          <object id=\"north-america-svg\" data=\"/northAmerica.svg\" type=\"image/svg+xml\"></object>\n          <Hexes game={game} className=\"hexes\" />\n        </div>\n      </div>\n\n      <h2 className=\"info-header\">Objectives</h2>\n\n      <div className=\"info-container\">\n        <div className=\"content\">\n          <p>\n            The objective of the game is to gain as many spaces as possible on the board. Teams are\n            put into divisions according to their advantages at the start of the game and should aim\n            to gain more spaces than any other team in their division in all classes.\n          </p>\n\n          <div className=\"flex\">\n            <div>\n              <strong>Division 1</strong>\n              <span>France</span>\n              <span>Britain</span>\n            </div>\n\n            <div>\n              <strong>Division 2</strong>\n              <span>Mohawk</span>\n              <span>Shawnee</span>\n              <span>Miami</span>\n            </div>\n\n            <div>\n              <strong>Division 3</strong>\n              <span>Ojibwe</span>\n              <span>Cherokee</span>\n            </div>\n\n            <div></div>\n          </div>\n        </div>\n      </div>\n\n      <h2 className=\"info-header\">Rules</h2>\n\n      <div className=\"info-container\">\n        <ol className=\"content\">\n          <li>You can only attack a space that is connected to one you control.</li>\n          <li>Alliances can be broken by either party at any time.</li>\n          <li>\n            If you win a battle as the aggressor, you gain the space you attacked. Your turn\n            continues and you may attack another space until you win three spaces, pass, or lose.\n          </li>\n          <li>If you lose a battle, you subtract one from your roll number.</li>\n          <li>\n            If you are being attacked, you may forfeit the space to the attacker, which allows you\n            to keep your roll number the same.\n          </li>\n          <li>\n            If an alliance loses a battle, every member of the alliance loses one from their roll\n            number.\n          </li>\n          <li>\n            The minimum roll number for Britain and France is 12. The minimum roll number for all\n            other groups is 6.\n          </li>\n          <li>In the event of a tie, both sides roll again.</li>\n          <li>You cannot lose your last space until there is only one round left in the game.</li>\n        </ol>\n      </div>\n    </>,\n    document.querySelector('#app')\n  );\n\n  $('.button-login').on('click', () => (location.href = './login'));\n}\n\nwindow.addEventListener('DOMContentLoaded', init);\nwindow.addEventListener('load', () => (document.body.style.visibility = 'visible'));\n","import * as $ from 'jquery';\nimport * as React from 'react';\nimport { Component } from 'react';\nimport { ContextMenu, ContextMenuTrigger, hideMenu as hideContextMenu, MenuItem } from 'react-contextmenu';\nimport { Game } from '..';\nimport { colors, hexLocations as loc } from '../../common/hexdata';\nimport { GroupName, HexContextClickData, HTMLDivProps } from '../../common/props';\nimport { capitalize } from '../../common/util';\n\ninterface HexesProps extends HTMLDivProps {\n  game: Game;\n}\n\nexport class Hexes extends Component<HexesProps, {}> {\n  render() {\n    const { game, className, ...otherProps } = this.props;\n    const hexComponents: Array<JSX.Element> = [];\n    for (let i = 1; i < loc.length; i++) {\n      hexComponents.push(<HexWrapper key={i} game={game} hexNumber={i} offset={loc[i]} />);\n    }\n    return (\n      <div className={className} {...otherProps}>\n        {hexComponents}\n      </div>\n    );\n  }\n}\n\ninterface HexWrapperProps {\n  game: Game;\n  hexNumber: number;\n  offset: [number, number];\n}\n\nclass HexWrapper extends Component<HexWrapperProps, { owner: GroupName }> {\n  hexNumber: number;\n\n  constructor(props: Readonly<HexWrapperProps>) {\n    super(props);\n\n    this.state = {\n      owner: this.props.game.hexesToOwners[this.props.hexNumber],\n    };\n\n    this.hexNumber = this.props.hexNumber;\n  }\n\n  componentDidMount() {\n    this.props.game.on('hexesreset', () => {\n      this.setState({\n        owner: this.props.game.hexesToOwners[this.hexNumber],\n      });\n    });\n    this.props.game.on('hexreset', (event: { detail: HexContextClickData }) => {\n      if (event.detail.hexNumber == this.hexNumber)\n        this.setState({\n          owner: this.props.game.hexesToOwners[this.hexNumber],\n        });\n    });\n  }\n\n  makeContextMenuItems(hexNumber: number) {\n    let counter = 0;\n    const menuItems: Array<JSX.Element> = [];\n    menuItems.push(\n      <span key={counter++} className=\"react-contextmenu-item no-hover\">\n        Hex {hexNumber}\n      </span>,\n      <MenuItem key={counter++} divider />\n    );\n    for (const group of Object.keys(colors) as GroupName[]) {\n      const icon = (\n        <svg\n          style={{ width: '16px', height: '16px' }}\n          id=\"northAmerica\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          viewBox=\"0 0 50 50\"\n        >\n          <title>icon</title>\n          <g>\n            <path\n              stroke=\"black\"\n              fill={colors[group]}\n              strokeWidth=\"3\"\n              d=\"M0,0 l50,0 l0,50 l-50,0 l0,-50\"\n            />\n          </g>\n        </svg>\n      );\n\n      const data: HexContextClickData = {\n        newOwner: group,\n        hexNumber: hexNumber,\n        oldOwner: this.state.owner,\n      };\n\n      menuItems.push(\n        <MenuItem\n          className=\"react-contextmenu-item--with-icon\"\n          key={counter++}\n          data={data}\n          onClick={this.clickHandler.bind(this)}\n        >\n          {icon} {capitalize(group)}\n        </MenuItem>\n      );\n    }\n\n    const resetData: HexContextClickData = {\n      reset: true,\n      hexNumber: hexNumber,\n    };\n\n    menuItems.push(\n      <MenuItem key={counter++} divider />,\n      <MenuItem key={counter++} data={resetData} onClick={this.clickHandler.bind(this)}>\n        Reset\n      </MenuItem>\n    );\n    return menuItems;\n  }\n\n  clickHandler(_event: any, detail: any) {\n    if (detail.reset) {\n      this.props.game.dispatch(\n        new CustomEvent('hexreset', {\n          detail: {\n            reset: true,\n            hexNumber: this.hexNumber,\n          } as HexContextClickData,\n        })\n      );\n      return;\n    }\n\n    const e = new CustomEvent('hexupdate', { detail });\n    this.props.game.dispatch(e);\n\n    this.setState({ owner: detail.newOwner });\n  }\n\n  onShowContextMenu() {\n    $('.modal')\n      .css({\n        height: '100vh',\n        width: '100vw',\n      })\n      .on('click', () => {\n        $('#modal').css({\n          height: '0',\n          width: '0',\n        });\n\n        hideContextMenu();\n      });\n  }\n\n  onHideContextMenu() {\n    $('.modal').css({\n      height: '0',\n      width: '0',\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <ContextMenuTrigger holdToDisplay={1} id={`hex${this.props.hexNumber}-context-menu`}>\n          <Hex\n            number={this.props.hexNumber}\n            owner={this.state.owner}\n            left={this.props.offset[0]}\n            top={this.props.offset[1]}\n          />\n        </ContextMenuTrigger>\n        <ContextMenu\n          onShow={this.onShowContextMenu}\n          onHide={this.onHideContextMenu}\n          id={`hex${this.props.hexNumber}-context-menu`}\n        >\n          {this.makeContextMenuItems(this.props.hexNumber)}\n        </ContextMenu>\n      </>\n    );\n  }\n}\n\ninterface HexProps {\n  number: number;\n  top: number;\n  left: number;\n  owner: string;\n}\n\nclass Hex extends Component<HexProps, {}> {\n  render() {\n    return (\n      <svg\n        onSelect={() => false}\n        onMouseDown={() => false}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        xmlSpace=\"preserve\"\n        x=\"0px\"\n        y=\"0px\"\n        viewBox=\"0 0 57 58\"\n        id={`hex${this.props.number}`}\n        className=\"hex\"\n        style={{\n          top: this.props.top + 'px',\n          left: this.props.left + 'px',\n          MozUserSelect: 'none',\n          WebkitUserSelect: 'none',\n          msUserSelect: 'none',\n          userSelect: 'none',\n        }}\n      >\n        <title>Hex {this.props.number}</title>\n        <path\n          className=\"stroke\"\n          style={{\n            fill: colors[this.props.owner],\n          }}\n          id={`hex${this.props.number}fill`}\n          d=\"M14.6,51.2l-10-20c-0.7-1.4-0.7-3.1,0-4.5l10-20C15.5,5.1,17.2,4,19.1,4h18.8c1.9,0,3.6,1.1,4.5,2.8l10,20\n          c0.7,1.4,0.7,3.1,0,4.5l-10,20c-0.8,1.7-2.6,2.8-4.5,2.8H19.1C17.2,54,15.5,52.9,14.6,51.2z\"\n        />\n        <text\n          transform=\"matrix(1 0 0 1 28.5 38.6973)\"\n          className=\"text\"\n          id={`hex${this.props.number}text`}\n        >\n          {this.props.number}\n        </text>\n      </svg>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Component } from 'react';\nimport { colors, SemanticColors } from '../../common/hexdata';\nimport { capitalize, EventPipe } from '../../common/util';\nimport { Button } from '../../common/components/button';\nimport { HTMLDivProps, HexContextClickData, GroupName } from '../../common/props';\nimport { Game } from '..';\n\ninterface NavbarProps extends HTMLDivProps {\n  game: Game;\n} \n\nexport class Navbar extends Component<NavbarProps, { counts: {} }> {\n  constructor(props: Readonly<NavbarProps>) {\n    super(props);\n\n    this.state = { counts: {} };\n\n    const { ownersToHexes } = this.props.game;\n\n    for (const group of Object.keys(colors) as GroupName[]) {\n      this.state.counts[group] = ownersToHexes[group].length;\n    }\n  }\n  componentDidMount() {\n    this.props.game.on('hexupdate', (event: { detail: HexContextClickData }) => {\n      const { oldOwner, newOwner } = event.detail;\n      if (oldOwner == undefined || newOwner == undefined) {\n        throw new Error('Error: event \"hexupdate\" was dispatched without correct owner details.');\n      }\n      this.setState((state, _props) => {\n        state.counts[oldOwner]--;\n        state.counts[newOwner]++;\n        return state;\n      });\n    });\n    this.props.game.on('navbarreset', () => {\n      const { ownersToHexes } = this.props.game;\n      const newState = { counts: {} };\n      for (const group of Object.keys(colors)) {\n        newState.counts[group] = ownersToHexes[group].length;\n      }\n      this.setState(newState);\n    });\n  }\n  \n  reset() {\n    this.props.game.dispatch(new CustomEvent('reset'));\n  }\n\n  render() {\n    const scoreButtons: Array<JSX.Element> = [];\n    for (let group of Object.keys(colors) as GroupName[]) {\n      scoreButtons.push(<ScoreButton key={group} group={group} value={this.state.counts[group]} />);\n    } \n\n    const { className, game, ...otherProps } = this.props;\n    return (\n      <div className={className} {...otherProps}>\n        <Button id=\"navbar-button-reset\" type=\"flat\" onClick={this.reset}>\n          <i className=\"fas fa-sync-alt\"></i> reset\n        </Button>\n        {scoreButtons}\n      </div>\n    );\n  }\n}\n\nexport class ScoreButton extends Component<{ group: GroupName; value: number }, {}> {\n  render() {\n    const { group, value } = this.props;\n    const disabled = value === 0;\n    return (\n      <Button\n        disabled={disabled}\n        id={`score-button-${group}`}\n        type=\"raised\"\n        color={SemanticColors[group]}\n      >\n        {capitalize(group)}: <span id={`score-${group}`}>{value}</span>\n      </Button>\n    );\n  }\n}\n"],"sourceRoot":""}